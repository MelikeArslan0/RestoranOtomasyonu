// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestoranOtomasyonu.DAL;

#nullable disable

namespace RestoranOtomasyonu.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230716203322_AdminTables")]
    partial class AdminTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RestoranOtomasyonu.Models.geribildirim", b =>
                {
                    b.Property<int>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MusteriID")
                        .HasColumnType("int");

                    b.Property<int>("YildizPuan")
                        .HasColumnType("int");

                    b.HasKey("GID");

                    b.HasIndex("MusteriID");

                    b.ToTable("geribildirim");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.icerik", b =>
                {
                    b.Property<int>("IcerikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IcerikAD")
                        .HasColumnType("longtext");

                    b.Property<int>("urunlerID")
                        .HasColumnType("int");

                    b.HasKey("IcerikID");

                    b.HasIndex("urunlerID");

                    b.ToTable("icerik");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KategoriAd")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("KategoriID");

                    b.ToTable("kategori");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.masa", b =>
                {
                    b.Property<int>("MasaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("KisiSayisi")
                        .HasColumnType("int");

                    b.Property<int>("MasaNumarası")
                        .HasColumnType("int");

                    b.Property<int>("MusteriID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RezervasyonTarihi")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MasaID");

                    b.HasIndex("MusteriID");

                    b.ToTable("masa");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.musteri", b =>
                {
                    b.Property<int>("MusteriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MusteriID");

                    b.ToTable("musteri");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.sepet", b =>
                {
                    b.Property<int>("SepetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IcerikID")
                        .HasColumnType("int");

                    b.Property<int>("urunlerID")
                        .HasColumnType("int");

                    b.HasKey("SepetID");

                    b.HasIndex("IcerikID");

                    b.HasIndex("urunlerID");

                    b.ToTable("sepet");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.sepeticerikler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IcerikID")
                        .HasColumnType("int");

                    b.Property<int>("SepetID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IcerikID");

                    b.HasIndex("SepetID");

                    b.ToTable("sepeticerikler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.siparisler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MasaID")
                        .HasColumnType("int");

                    b.Property<int>("TerminalID")
                        .HasColumnType("int");

                    b.Property<int>("urunlerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MasaID");

                    b.HasIndex("TerminalID");

                    b.HasIndex("urunlerID");

                    b.ToTable("siparisler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.terminal", b =>
                {
                    b.Property<int>("TerminalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TAd")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TerminalID");

                    b.ToTable("terminal");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.urunler", b =>
                {
                    b.Property<int>("UrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("KategoriID")
                        .HasColumnType("int");

                    b.Property<string>("ResimYap")
                        .HasColumnType("longtext");

                    b.Property<string>("UrunAD")
                        .HasColumnType("longtext");

                    b.Property<int?>("UrunFiyat")
                        .HasColumnType("int");

                    b.HasKey("UrunID");

                    b.HasIndex("KategoriID");

                    b.ToTable("urunler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.yetkilitablo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KAdSoyad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("KTC")
                        .HasColumnType("int");

                    b.Property<int>("KTel")
                        .HasColumnType("int");

                    b.Property<string>("KUnvan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("yetkilitablo");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.geribildirim", b =>
                {
                    b.HasOne("RestoranOtomasyonu.Models.musteri", "musteri")
                        .WithMany("geribildirim")
                        .HasForeignKey("MusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("musteri");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.icerik", b =>
                {
                    b.HasOne("RestoranOtomasyonu.Models.urunler", "urunler")
                        .WithMany("icerik")
                        .HasForeignKey("urunlerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("urunler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.masa", b =>
                {
                    b.HasOne("RestoranOtomasyonu.Models.musteri", "musteri")
                        .WithMany("masa")
                        .HasForeignKey("MusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("musteri");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.sepet", b =>
                {
                    b.HasOne("RestoranOtomasyonu.Models.icerik", "icerik")
                        .WithMany("sepet")
                        .HasForeignKey("IcerikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestoranOtomasyonu.Models.urunler", "urunler")
                        .WithMany("sepet")
                        .HasForeignKey("urunlerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("icerik");

                    b.Navigation("urunler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.sepeticerikler", b =>
                {
                    b.HasOne("RestoranOtomasyonu.Models.icerik", "icerik")
                        .WithMany("sepeticerikler")
                        .HasForeignKey("IcerikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestoranOtomasyonu.Models.sepet", "sepet")
                        .WithMany("sepeticerikler")
                        .HasForeignKey("SepetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("icerik");

                    b.Navigation("sepet");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.siparisler", b =>
                {
                    b.HasOne("RestoranOtomasyonu.Models.masa", "masa")
                        .WithMany("siparisler")
                        .HasForeignKey("MasaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestoranOtomasyonu.Models.terminal", "terminal")
                        .WithMany("siparisler")
                        .HasForeignKey("TerminalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestoranOtomasyonu.Models.urunler", null)
                        .WithMany("siparisler")
                        .HasForeignKey("urunlerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("masa");

                    b.Navigation("terminal");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.urunler", b =>
                {
                    b.HasOne("RestoranOtomasyonu.Models.kategori", "kategori")
                        .WithMany("urunler")
                        .HasForeignKey("KategoriID");

                    b.Navigation("kategori");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.icerik", b =>
                {
                    b.Navigation("sepet");

                    b.Navigation("sepeticerikler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.kategori", b =>
                {
                    b.Navigation("urunler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.masa", b =>
                {
                    b.Navigation("siparisler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.musteri", b =>
                {
                    b.Navigation("geribildirim");

                    b.Navigation("masa");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.sepet", b =>
                {
                    b.Navigation("sepeticerikler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.terminal", b =>
                {
                    b.Navigation("siparisler");
                });

            modelBuilder.Entity("RestoranOtomasyonu.Models.urunler", b =>
                {
                    b.Navigation("icerik");

                    b.Navigation("sepet");

                    b.Navigation("siparisler");
                });
#pragma warning restore 612, 618
        }
    }
}
